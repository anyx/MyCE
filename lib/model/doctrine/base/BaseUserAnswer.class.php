<?php

/**
 * BaseUserAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $crossword_id
 * @property Crossword $Crossword
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $Answer
 * 
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method integer             getCrosswordId()  Returns the current record's "crossword_id" value
 * @method Crossword           getCrossword()    Returns the current record's "Crossword" value
 * @method sfGuardUser         getSfGuardUser()  Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getAnswer()       Returns the current record's "Answer" collection
 * @method UserAnswer          setUserId()       Sets the current record's "user_id" value
 * @method UserAnswer          setCrosswordId()  Sets the current record's "crossword_id" value
 * @method UserAnswer          setCrossword()    Sets the current record's "Crossword" value
 * @method UserAnswer          setSfGuardUser()  Sets the current record's "sfGuardUser" value
 * @method UserAnswer          setAnswer()       Sets the current record's "Answer" collection
 * 
 * @package    crosswords
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_answer');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('crossword_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Crossword', array(
             'local' => 'crossword_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Answer', array(
             'local' => 'id',
             'foreign' => 'answer_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}